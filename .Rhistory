# Linear Regression for Lambdas
averageStockReturn <- aggregate(mycleandata[,5], list(mycleandata$Ticker), function(x) mean(x,na.rm = TRUE))
averageStockReturn
myLinearModel <- lm(averageStockReturn ~ beta )
myLinearModel <- lm(averageStockReturn$x ~ beta )
myLinearModel$coefficients
myLinearModel$coefficients[1]*12
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
View(averageStockReturn)
View(mycleandata)
mycsv <- cbind(averageStockReturn,beta)
View(mycsv)
rownames(mycsv)
colnames(mycsv)
col.names(mycsv)
colnames(mycsv) <- c("Tickers","Return","Beta")
View(mycsv)
write.csv(mycsv,"/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/beta_and_stock.csv")
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
plot(averageStockReturn,beta,col ='blue')
abline(myLinearModel)
plot(averageStockReturn$x,beta,col ='blue')
abline(myLinearModel)
plot(averageStockReturn$x*12,beta,col ='blue')
abline(myLinearModel)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
temp <- subset(mycleandata,mycleandata$Ticker == 'AAA')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
temp <- subset(mycleandata,mycleandata$Ticker == 'CTG')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
plot(eReturnMarket,eReturnStock,col ='blue')
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
temp <- subset(mycleandata,mycleandata$Ticker == 'GAS')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
temp <- subset(mycleandata,mycleandata$Ticker == 'TSC')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
summary(lm(eReturnStock ~ eReturnMarket))
linear <- lm(eReturnStock ~ eReturnMarket)
linear$coefficients
linear$coefficients['eReturnMarket',"Std. Error"]
summary_linear <- summary(lm(eReturnStock ~ eReturnMarket))
summary_linear$coefficients
summary_linear$coefficients["eReturnMarket","Error"]
summary_linear$coefficients["eReturnMarket","Std. Error"]
stdbeta <- summary_linear$coefficients["eReturnMarket","Std. Error"]
estimate <- summary_linear$coefficients["eReturnMarket","Estimate"]
t_value <- estimate/stdbeta
p_value <- 2*pt(-abs(t_value), df=nrow(cars)-ncol(cars))
p_value <- 2*pt(-abs(t_value), df=nrow(eReturnStock)-2)
p_value
p_value <- 2*pt(-abs(t_value), df=length(eReturnStock)-2)
# Author : Le Tran Ngoc Minh.
# Email : minh.le2018@qcf.jvn.edu.vn
#library
library(readxl)
# Read excel file
HP <- read_excel("Documents/JVN/M1/S1/Econometric/Chris Brook Excel data files/UKHP.xls")
# Basics Operation
Z <- HP$'Average House Price'
A <- Z/2
B <- Z*2
C <- Z^2
D <- log(Z)
DD <- log(Z,base=2)
# Create series of return
Zseries <- ts(HP$'Average House Price')
DHP <- 100*diff(Zseries)/lag(Zseries,-1)
# Draw histogram
hist(DHP)
# Summary
summary(DHP)
library(psych)
describe(DHP)
# Plot
plot(Z,type = 'l')
# Chapter 3 Linear Regression
# read dataset
SP <- read_excel("Documents/JVN/M1/S1/Econometric/Chris Brook Excel data files/SandPhedge.xls")
spot <- ts(SP$Spot)
futures <- ts(SP$Futures)
rfutures <- 100*diff(log(futures))
rspot <- 100*diff(log(spot))
# Linear Regression SandPHegde
ReturnReg <- lm(rspot~rfutures)
summary(ReturnReg)
# read dataset
capm <- read_excel("Documents/JVN/M1/S1/Econometric/Chris Brook Excel data files/capm.xls")
View(capm)
sandp <- ts(capm$SANDP)
ford <- ts(capm$FORD)
oracle <- ts(capm$ORACLE)
msoft <- ts(capm$MICROSOFT)
ge <- ts(capm$GE)
USTB3M <- ts(capm$USTB3M)/12
rSandp <- 100*diff(log(sandp))
rFord <- 100*diff(log(ford))
rOracle <- 100*diff(log(oracle))
rMsoft <- 100*diff(log(msoft))
rGE <- 100*diff(log(ge))
# Excess Return:
erSandp <- rSandp - USTB3M
erFord <- rFord - USTB3M
erOracle <- rOracle - USTB3M
erMsoft <- rMsoft - USTB3M
erGE <- rGE - USTB3M
# Linear Regression Ford and SandP
capm.lm <- lm(erFord~erSandp)
summary(capm.lm)
plot(erSandp,erFord)
plot(erSandp,erFord)
plot(erSandp,erFord,phc=1)
plot(erSandp,erFord,pch=1)
graphics.off()
plot(erSandp,erFord,pch=1)
plot(erSandp)
plot(c(erSandp),c(erFord),pch=1)
plot(c(erSandp),c(erFord),pch=19)
# VNIndex$return <- c(NA, log(VNIndex$Close[-1]/VNIndex$Close[-length(VNIndex$Close)]))
VNIndex$return <- diff(log(VNIndex$Close))
View(VNIndex)
# VNIndex$return <- c(NA, log(VNIndex$Close[-1]/VNIndex$Close[-length(VNIndex$Close)]))
VNIndex$return <- c(NA,diff(log(VNIndex$Close)))
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
myLinearModel$coefficients
source('~/Documents/JVN/M1/S1/Econometric/LeTranNgocMinh.R', echo=TRUE)
abline(capm.lm)
View(capm)
summary(myLinearModel)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
summary(myLinearModel)
unique_indexs <- unique(mycleandata$Ticker)
beta <- numeric(length(unique_indexs))
count = 1
for (index in unique_indexs){
temp <- subset(mycleandata,mycleandata$Ticker == index)
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
beta[count] <- cov(eReturnStock,eReturnMarket) / var(eReturnMarket)
count <- count + 1
}
rm(count)
averageStockReturn <- aggregate(mycleandata[,5], list(mycleandata$Ticker), function(x) mean(x,na.rm = TRUE))
myLinearModel <- lm(averageStockReturn$x  ~ beta )
myLinearModel$coefficients
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
plot(beta,averageStockReturn$x)
abline(myLinearModel)
View(averageStockReturn)
myLinearModel$residuals
myLinearModel$residuals*2
unique_indexs <- unique(mycleandata$Ticker)
beta <- numeric(length(unique_indexs))
residual_var <- numeric(length(unique_indexs))
count = 1
for (index in unique_indexs){
temp <- subset(mycleandata,mycleandata$Ticker == index)
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
myLinearModel <- lm(eReturnStock ~ eReturnMarket)
beta[count] <- myLinearModel$coefficients[2]
residual_var <- var(myLinearModel$residuals)
count <- count + 1
}
rm(count)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
unique_indexs <- unique(mycleandata$Ticker)
beta <- numeric(length(unique_indexs))
residual_var <- numeric(length(unique_indexs))
count = 1
for (index in unique_indexs){
temp <- subset(mycleandata,mycleandata$Ticker == index)
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
myLinearModel <- lm(eReturnStock ~ eReturnMarket)
beta[count] <- myLinearModel$coefficients[2]
residual_var[count] <- var(myLinearModel$residuals)
count <- count + 1
}
rm(count)
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + beta^2 + residual_var)
myLinearModel$coefficients
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + (beta^2) + (residual_var))
myLinearModel_4Lambda$coefficients
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + beta_square + (residual_var))
myLinearModel_4Lambda$coefficients
beta_square <- beta^2
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + (beta_square) + (residual_var))
myLinearModel_4Lambda$coefficients
unique_indexs <- unique(mycleandata$Ticker)
beta <- numeric(length(unique_indexs))
residual_var <- numeric(length(unique_indexs))
count = 1
for (index in unique_indexs){
temp <- subset(mycleandata,mycleandata$Ticker == index)
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
myLinearModel <- lm(eReturnStock ~ eReturnMarket)
beta[count] <- myLinearModel$coefficients[2]
residual_var[count] <- var(myLinearModel$residuals)
count <- count + 1
}
rm(count)
averageStockReturn <- aggregate(mycleandata[,5], list(mycleandata$Ticker), function(x) mean(x,na.rm = TRUE))
myLinearModel <- lm(averageStockReturn$x  ~ beta )
myLinearModel$coefficients
plot(beta,averageStockReturn$x)
abline(myLinearModel)
beta_square <- beta^2
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + (beta_square) + (residual_var))
myLinearModel_4Lambda$coefficients
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
summary(myLinearModel)
plot(beta,averageStockReturn$x)
abline(myLinearModel)
myLinearModel_4Lambda <- lm(averageStockReturn$x  ~ beta + (beta_square) + (residual_var))
summary(myLinearModel_4Lambda)
?CAPM
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
CAPM.beta(temp$return[-1],VNIndex$return[-1],head(govBond$Close,4))
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
temp <- subset(mycleandata,mycleandata$Ticker == 'AAA')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
summary(lm(eReturnStock ~ eReturnMarket))
temp <- subset(mycleandata,mycleandata$Ticker == 'TSG')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
summary(lm(eReturnStock ~ eReturnMarket))
temp <- subset(mycleandata,mycleandata$Ticker == 'AAA')
eReturnStock <- (temp$return[-1])  - head(govBond$Close,4)
eReturnMarket <- (VNIndex$return[-1]) - head(govBond$Close,4)
plot(eReturnMarket,eReturnStock,col ='blue')
abline(lm(eReturnStock ~ eReturnMarket))
summary(lm(eReturnStock ~ eReturnMarket))
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
govBond.head()
mycleandata$Ticker
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
unique_indexs
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
View(mydata)
View(mydata)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
View(temp)
View(temp)
library(readxl)
library(timeDate)
rm(list = ls(all = TRUE))
graphics.off()
mydata <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/data-econometric.csv")
VNIndex <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/vnindex.csv")
govBond <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/new_gov_bond.csv")
mydata$Date.Time <- as.Date(mydata$Date.Time,"%m/%d/%Y")
VNIndex$Date.Time <- as.Date(VNIndex$Date.Time,"%m/%d/%Y")
govBond$Date <- sapply(govBond$Date,function(x) paste("20",x,sep=""))
govBond$Date <- sapply(govBond$Date,function(x) paste(x,"-1",sep=""))
govBond$Date <- as.Date(govBond$Date,format = "%Y-%b-%d")
govBond <- subset(govBond,govBond$Date >= as.Date("2013-01-01"))
govBond$Date <- format(govBond$Date, "%Y-%m")
govBond$Close <- sapply(govBond$Close,function(x) (x+1)^(1/12)-1)
govBond <- govBond[nrow(govBond):1, ]
StartDate <- as.Date("2017-08-31")
EndDate <- as.Date("2018-12-28")
# Data huy niem yet truoc 2018
temp <- subset(mydata,mydata$Date.Time == EndDate)
indexs <- temp$Ticker
rm(temp)
mycleandata <- mydata[which(mydata$Ticker %in% indexs),]
# Thanh Khoang >= 20*10^9
temp <- subset(mycleandata,mycleandata$Date.Time >= StartDate)
temp$Price <- temp$Volume*temp$Close*1000
price <- aggregate(temp[,5], by = list(temp$Ticker),mean)
price <- subset(price,price$x >= 20*10^9)
indexs <- price$Group.1
mycleandata <- mycleandata[which(mycleandata$Ticker %in% indexs),]
indexs
library(readxl)
library(timeDate)
rm(list = ls(all = TRUE))
graphics.off()
mydata <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/data-econometric.csv")
VNIndex <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/vnindex.csv")
govBond <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/new_gov_bond.csv")
mydata$Date.Time <- as.Date(mydata$Date.Time,"%m/%d/%Y")
VNIndex$Date.Time <- as.Date(VNIndex$Date.Time,"%m/%d/%Y")
govBond$Date <- sapply(govBond$Date,function(x) paste("20",x,sep=""))
govBond$Date <- sapply(govBond$Date,function(x) paste(x,"-1",sep=""))
govBond$Date <- as.Date(govBond$Date,format = "%Y-%b-%d")
govBond <- subset(govBond,govBond$Date >= as.Date("2013-01-01"))
govBond$Date <- format(govBond$Date, "%Y-%m")
govBond$Close <- sapply(govBond$Close,function(x) (x+1)^(1/12)-1)
govBond <- govBond[nrow(govBond):1, ]
StartDate <- as.Date("2017-08-31")
EndDate <- as.Date("2018-08-31")
# Data huy niem yet truoc 2018
temp <- subset(mydata,mydata$Date.Time == EndDate)
indexs <- temp$Ticker
rm(temp)
mycleandata <- mydata[which(mydata$Ticker %in% indexs),]
# Thanh Khoang >= 20*10^9
temp <- subset(mycleandata,mycleandata$Date.Time >= StartDate)
temp$Price <- temp$Volume*temp$Close*1000
price <- aggregate(temp[,5], by = list(temp$Ticker),mean)
price <- subset(price,price$x >= 20*10^9)
indexs <- price$Group.1
mycleandata <- mycleandata[which(mycleandata$Ticker %in% indexs),]
indexs
library(readxl)
library(timeDate)
rm(list = ls(all = TRUE))
graphics.off()
mydata <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/data-econometric.csv")
VNIndex <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/vnindex.csv")
govBond <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/new_gov_bond.csv")
mydata$Date.Time <- as.Date(mydata$Date.Time,"%m/%d/%Y")
VNIndex$Date.Time <- as.Date(VNIndex$Date.Time,"%m/%d/%Y")
govBond$Date <- sapply(govBond$Date,function(x) paste("20",x,sep=""))
govBond$Date <- sapply(govBond$Date,function(x) paste(x,"-1",sep=""))
govBond$Date <- as.Date(govBond$Date,format = "%Y-%b-%d")
govBond <- subset(govBond,govBond$Date >= as.Date("2013-01-01"))
govBond$Date <- format(govBond$Date, "%Y-%m")
govBond$Close <- sapply(govBond$Close,function(x) (x+1)^(1/12)-1)
govBond <- govBond[nrow(govBond):1, ]
mycleandata <- mydata[which(mydata$Ticker %in% indexs),]
indexs <- c(['AAA', 'AGR', 'ANV', 'APC', 'APG', 'ASM', 'BMI', 'BMP', 'BSI', 'BVH', 'C32 ', 'C47', 'CCL', 'CHP', 'CII', 'CMG', 'CSM', 'CTD', 'CTG', 'CTI', 'CTS', 'CVT', 'D2D', 'DAG', 'DCL', 'DHA', 'DHC', 'DHG', 'DIG', 'DLG', 'DPM', 'DPR', 'DQC', 'DRC', 'DRH', 'DXG', 'GIL', 'GMD', 'HAG', 'HAI', 'EIB', 'ELC', 'EVE', 'FCN', 'FLC', 'FMC', 'FPT', 'GAS', 'HAX', 'HBC', 'HCM', 'HDC', 'HDG', 'HHS', 'HPG', 'HQC', 'HSG', 'HT1', 'HVG', 'IDI', 'IJC', 'IMP', 'ITA', 'JVC', 'KBC', 'KDC', 'KDH', 'KSB', 'LCG', 'LHG', 'LSS', 'MBB', 'MSN', 'NBB', 'NKG', 'NNC', 'NT2', 'NTL', 'NVT', 'OGC', 'PAC', 'PAN', 'PDR', 'PET', 'PHC', 'PHR', 'PNJ', 'PPC', 'PTB', 'PVD', 'PVT', 'PXS', 'QCG', 'RAL', 'REE', 'SAM', 'SBT', 'SCR', 'SHI', 'SJD', 'SJS', 'SMC', 'SSI', 'STB', 'STG', 'TCM', 'TDC', 'TDH', 'TLH', 'TRA', 'TSC', 'TTF', 'VCB', 'VHC', 'VHG', 'VIC', 'VIS', 'VN30', 'VND', 'VNE', 'VNG', 'VNM', 'VNS', 'VOS', 'VPH', 'VRC', 'VSC'])
indexs <- c('AAA', 'AGR', 'ANV', 'APC', 'APG', 'ASM', 'BMI', 'BMP', 'BSI', 'BVH', 'C32 ', 'C47', 'CCL', 'CHP', 'CII', 'CMG', 'CSM', 'CTD', 'CTG', 'CTI', 'CTS', 'CVT', 'D2D', 'DAG', 'DCL', 'DHA', 'DHC', 'DHG', 'DIG', 'DLG', 'DPM', 'DPR', 'DQC', 'DRC', 'DRH', 'DXG', 'GIL', 'GMD', 'HAG', 'HAI', 'EIB', 'ELC', 'EVE', 'FCN', 'FLC', 'FMC', 'FPT', 'GAS', 'HAX', 'HBC', 'HCM', 'HDC', 'HDG', 'HHS', 'HPG', 'HQC', 'HSG', 'HT1', 'HVG', 'IDI', 'IJC', 'IMP', 'ITA', 'JVC', 'KBC', 'KDC', 'KDH', 'KSB', 'LCG', 'LHG', 'LSS', 'MBB', 'MSN', 'NBB', 'NKG', 'NNC', 'NT2', 'NTL', 'NVT', 'OGC', 'PAC', 'PAN', 'PDR', 'PET', 'PHC', 'PHR', 'PNJ', 'PPC', 'PTB', 'PVD', 'PVT', 'PXS', 'QCG', 'RAL', 'REE', 'SAM', 'SBT', 'SCR', 'SHI', 'SJD', 'SJS', 'SMC', 'SSI', 'STB', 'STG', 'TCM', 'TDC', 'TDH', 'TLH', 'TRA', 'TSC', 'TTF', 'VCB', 'VHC', 'VHG', 'VIC', 'VIS', 'VN30', 'VND', 'VNE', 'VNG', 'VNM', 'VNS', 'VOS', 'VPH', 'VRC', 'VSC')
mycleandata <- mydata[which(mydata$Ticker %in% indexs),]
View(mydata)
View(mycleandata)
mycleandata$Ticker
unique(mycleandata$Ticker)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
write.csv(mycleandata,"/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/clean-data-econometric.csv")
write.csv(govBond,"/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/normalize-govBond.csv")
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
View(temp)
View(govBond)
head(govBond$Close,4)
temp$return[-1]
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
View(mycleandata)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
averageStockReturn <- aggregate(mycleandata[,4], list(mycleandata$Ticker), function(x) mean(x,na.rm = TRUE))
myLinearModel <- lm(averageStockReturn$x  ~ beta )
myLinearModel$coefficients
plot(beta,averageStockReturn$x)
abline(myLinearModel)
summary(myLinearModel)
mycsv <- cbind(averageStockReturn,beta)
write.csv(mycsv,"/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/beta_and_stock.csv")
unique_indexs <- unique(mycleandata$Ticker)
beta <- numeric(length(unique_indexs))
residual_var <- numeric(length(unique_indexs))
count = 1
for (index in unique_indexs){
temp <- subset(mycleandata,mycleandata$Ticker == index)
eReturnStock <- (temp$return[-1])  - govBond$Close
eReturnMarket <- (VNIndex$return[-1]) - govBond$Close
myLinearModel <- lm(eReturnStock ~ eReturnMarket)
beta[count] <- myLinearModel$coefficients[2]
residual_var[count] <- var(myLinearModel$residuals)
count <- count + 1
}
rm(count)
warnings()
View(mydata)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
warnings()
View(govBond)
View(VNIndex)
View(temp)
View(mydata)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
View(govBond)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
View(VNIndex)
View(temp)
View(VNIndex)
View(temp)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
View(averageStockReturn)
View(govBond)
View(mycleandata)
View(mycsv)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProjectEconometric.R', echo=TRUE)
library(readxl)
SP500 <- read.csv("/Users/minh/Documents/^GSPC.csv")
VNIndex <- read.csv("/Users/minh/Documents/JVN/M1/S1/Quant/Exercise/vnindex.csv")
rSP <- diff(log(SP500$Close))*100
rVN <- diff(log(VNIndex$Close))*100
corSP <- acf(rSP, lag.max = 1, plot = FALSE)
corVN <- acf(rVN, lag.max = 1, plot = FALSE)
View(VNIndex)
View(SP500)
rSP <- diff(log(SP500$Close))*100
rVN <- diff(log(VNIndex$X.Low.))*100
corSP <- acf(rSP, lag.max = 1, plot = FALSE)
corVN <- acf(rVN, lag.max = 1, plot = FALSE)
corSP
corVN
corVN <- acf(rVN, lag.max = 1, plot = TRUE)
corSP <- acf(rSP, lag.max = 1, plot = TRUE)
corVN <- acf(rVN, lag.max = 10, plot = TRUE)
corSP <- acf(rSP, lag.max = 10, plot = TRUE)
corVN <- acf(rVN, lag.max = 10, plot = TRUE)
sd(rpSP)
sd(rSP)
sd(VnIndex)
sd(rVN)
govBond <- read.csv("/Users/minh/Documents/JVN/M1/S1/Econometric/FinalProject/new_gov_bond.csv")
source('~/Documents/JVN/M1/S1/Econometric/FinalProject/FinalProject.R', echo=TRUE)
debug()
rm(list = ls(all = TRUE))
graphics.off()
source('~/Documents/GitHub/JVN_Project/TimeSeriesProject/bike_sharing.R', echo=TRUE)
#------Test-----#
myts <-  ts(train,frequency=7)
summary(myts )
timeseriesln <- tslm(clean_cnt ~ instant + season_1 + season_2 + season_3 +
weathersit_1 + weathersit_2 + holiday + workingday +
atemp + hum + windspeed,
data=train)
timeseriesln <- tslm(clean_cnt ~ instant + season_1 + season_2 + season_3 +
weathersit_1 + weathersit_2 + holiday + workingday +
atemp + hum + windspeed,
data=myts)
autoplot(myts)
autoplot(timeseriesln)
forecast(fit.beer) %>%
autoplot()
forecast(timeseriesln) %>%
autoplot()
fcast <- forecast(timeseriesln)
fcast <- forecast(timeseriesln,test)
autoplot(fcast)
checkresidual(timeseriesln)
checkresiduals(timeseriesln)
acf2(timeseriesln$residuals)
autoplot(fcast) + autolayer(test) + theme_bw()
autoplot(fcast) + autolayer(data) + theme_bw()
#------Test-----#
myts <-  ts(train,frequency=30)
timeseriesln <- tslm(clean_cnt ~ instant + season_1 + season_2 + season_3 +
weathersit_1 + weathersit_2 + holiday + workingday +
atemp + hum + windspeed,
data=myts)
checkresiduals(timeseriesln)
fcast <- forecast(timeseriesln,test)
autoplot(fcast) + autolayer(data) + theme_bw()
data <- count_ma
autoplot(fcast) + autolayer(data) + theme_bw()
data <- count_ts
autoplot(fcast) + autolayer(data) + theme_bw()
autoplot(fcast) + autolayer(data) + theme_bw() +
scale_color_grey(start = 0.2, end = 0) +
scale_x_continuous(breaks= c(1,13,24.25),
labels= c("2011-Jan","2012-Jan","2012-Dec")) +
xlab("Month") + ylab("Daily Count")
autoplot(fcast,color ='grey') + autolayer(data) + theme_bw() +
scale_color_grey(start = 0.2, end = 0) +
scale_x_continuous(breaks= c(1,13,24.25),
labels= c("2011-Jan","2012-Jan","2012-Dec")) +
xlab("Month") + ylab("Daily Count")
autoplot(data) + autolayer(fcast,color='grey') + theme_bw() +
scale_color_grey(start = 0.2, end = 0) +
scale_x_continuous(breaks= c(1,13,24.25),
labels= c("2011-Jan","2012-Jan","2012-Dec")) +
xlab("Month") + ylab("Daily Count")
autoplot(data) + autolayer(fcast,color='grey') + autolayer(data) + theme_bw() +
scale_color_grey(start = 0.2, end = 0) +
scale_x_continuous(breaks= c(1,13,24.25),
labels= c("2011-Jan","2012-Jan","2012-Dec")) +
xlab("Month") + ylab("Daily Count")
